#!/bin/sh
# This script minimises javascript code, removes blank lines, and removes leading spaces.
# The minimizing process re-writes the javascript code and, if care is not taken,
# will alter the way the code works.
set -e

IN_FILE=simone.html
OUT_FILE=simone.min.html

rm -f $OUT_FILE

# Extract non-javascript portions of HTML file.
sed '/^<script/q' $IN_FILE > tmp_head.txt
sed -n '/^<\/script/,$p' $IN_FILE > tmp_tail.txt

# Extract javascript code (including HTML tags), then remove first and last line.
sed -n '/^<script/,$p' $IN_FILE | sed '/^<\/script/q' | sed '1d' | sed '$d' > tmp_src.js

# Create externs file.
cat << EOF > tmp_externs.js
/**
 * This file was auto-generated by $0. Do not modify.
 *
 * @externs
 */

// For some reason, 'simone.start' can be removed and it will not be renamed;
// this is not true for other function names.
var simone;
simone.blind = function() {};
simone.freeplay = function() {};
simone.help = function() {};
simone.keyDown = function() {};
simone.keyUp = function() {};
simone.latch = function(val) {};
simone.level = function(levelNum) {};
simone.mute = function() {};
simone.padDown = function(padId) {};
simone.padUp = function() {};
simone.replay = function() {};
simone.rotate = function() {};
simone.start = function() {};
EOF

# Minimize source code.
java -jar closure-compiler-v20240317.jar --compilation_level ADVANCED_OPTIMIZATIONS  --js tmp_src.js --js tmp_externs.js --js_output_file tmp_min.js

# Build minified HTML file; remove blank lines; remove leading spaces.
cat tmp_head.txt tmp_min.js tmp_tail.txt | sed '/^\s*$/d' | sed 's/^\s*//' > $OUT_FILE

# Clean up
rm tmp_head.txt
rm tmp_tail.txt
rm tmp_src.js
rm tmp_min.js
rm tmp_externs.js

echo "Created $OUT_FILE"

